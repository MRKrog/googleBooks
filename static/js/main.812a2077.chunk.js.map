{"version":3,"sources":["logo.svg","reducers/index.js","reducers/saveReducer.js","reducers/bookReducer.js","reducers/loadingReducer.js","reducers/errorReducer.js","containers/Search/Search.js","containers/Book/Book.js","actions/index.js","containers/BookDisplay/BookDisplay.js","containers/Modal/Modal.js","components/Loading/Loading.js","components/Error/Error.js","utility/cleanBooks.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","rootReducer","combineReducers","savedBooks","state","action","type","push","book","updatedBooks","filter","savedBook","id","bookID","searchedBooks","foundBooks","books","clickedBook","find","savedStatus","loading","error","Search","props","handleSubmit","event","search","preventDefault","length","handleSearch","setState","handleInput","target","name","value","className","onSubmit","this","placeholder","onChange","Component","Book","handleSave","setSaveBook","setRemoveBook","updateBookDisplay","author","image","title","publisher","src","alt","onClick","connect","dispatch","data","BookDisplay","map","singleBook","key","Modal","hideModal","Loading","loadingImage","Error","cleanBooks","volumeInfo","authors","imageLinks","thumbnail","handleBookReload","bookResultID","App","a","setBookSearch","setLoading","fetch","response","ok","json","items","setError","message","showModal","modal","Boolean","window","location","hostname","match","store","createStore","__REDUX_DEVTOOLS_EXTENSION__","router","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.812a2077.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.cd2fd5e7.svg\";","import { combineReducers } from 'redux';\n\nimport { bookReducer } from './bookReducer';\nimport { saveReducer } from './saveReducer';\nimport { loadingReducer } from './loadingReducer';\nimport { errorReducer } from './errorReducer';\n\nexport const rootReducer = combineReducers({\n  savedBooks: saveReducer,\n  searchedBooks: bookReducer,\n  loading: loadingReducer,\n  error: errorReducer,\n})\n","export const saveReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"BOOK_SAVE\":\n      state.push(action.book)\n      return state\n    case \"BOOK_REMOVE\":\n      let updatedBooks = state.filter(savedBook => {\n        return savedBook.id !== action.bookID\n      })\n      return updatedBooks\n    default:\n      return state\n  }\n}\n","export const bookReducer = (state = [], action) => {\n  switch (action.type) {\n    case \"BOOK_SEARCH\":\n      let foundBooks = action.books\n      return [...foundBooks]\n    case \"BOOK_UPDATE\":\n      let clickedBook = state.find(book => {\n        return action.bookID === book.id\n      })\n      if(clickedBook) clickedBook.savedStatus = !clickedBook.savedStatus\n      return [...state]\n    default:\n      return state\n  }\n}\n","export const loadingReducer = (state = false, action) => {\n  switch (action.type) {\n    case 'SET_LOADING':\n      return action.loading\n    default:\n      return state\n  }\n}\n","export const errorReducer = (state = '', action) => {\n  switch (action.type) {\n    case 'SET_ERROR':\n      return action.error\n    default:\n      return state\n  }\n}\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nexport class Search extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      search: ''\n    }\n  }\n\n  handleSubmit = (event) => {\n    const { search } = this.state;\n    event.preventDefault();\n    if(search.length > 0){\n      this.props.handleSearch(search)\n      this.setState({\n        search: ''\n      })\n    }\n  }\n\n  handleInput = (event) => {\n    const { name, value } = event.target;\n    this.setState({\n      [name]: value\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"Search\">\n        <section className=\"searchTitle\">\n           <h2>Google Books</h2>\n        </section>\n        <form className=\"searchForm\" onSubmit={this.handleSubmit}>\n           <input\n             type=\"search\"\n             placeholder=\"Enter Your Search\"\n             name=\"search\"\n             value={this.state.search}\n             onChange={this.handleInput}\n           />\n           <button type=\"submit\">Search</button>\n         </form>\n      </div>\n    );\n  }\n}\n\nSearch.propTypes = {\n  handleSearch: PropTypes.func,\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport * as actions from '../../actions/index';\n\nexport class Book extends Component {\n\n  handleSave = (event) => {\n    event.preventDefault();\n    const { setSaveBook, setRemoveBook, updateBookDisplay, id, author, image, title, publisher, savedStatus } = this.props;\n    if(!savedStatus) {\n      setSaveBook({ id, author, image, title, publisher, savedStatus: true })\n    } else {\n      setRemoveBook(id)\n    }\n    updateBookDisplay(id)\n  }\n\n  render() {\n    const { title, author, image, publisher, savedStatus } = this.props;\n    return (\n      <div className=\"Book\">\n        <div className=\"BookContent\">\n          <section className=\"BookImage\">\n            <img src={image} alt=\"background-books\"/>\n          </section>\n          <section className=\"BookCopy\">\n          <button onClick={this.handleSave}>\n            <i className={savedStatus ? \"fas fa-star\" : \"far fa-star\"}></i>\n          </button>\n          <h5><span>Title:</span> {title}</h5>\n          <h5><span>Author:</span> {author === null ? 'N/A' : author}</h5>\n          <h5><span>Publisher:</span> {publisher === null ? 'N/A' : publisher}</h5>\n          </section>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport const mapDispatchToProps = (dispatch) => ({\n  setSaveBook: (data) => dispatch(actions.setSaveBook(data)),\n  setRemoveBook: (data) => dispatch(actions.setRemoveBook(data)),\n  updateBookDisplay: (data) => dispatch(actions.updateBookDisplay(data)),\n})\n\nBook.propTypes = {\n  setSaveBook: PropTypes.func,\n  setRemoveBook: PropTypes.func,\n  updateBookDisplay: PropTypes.func,\n  title: PropTypes.string,\n  author: PropTypes.string,\n  image: PropTypes.string,\n  publisher: PropTypes.string,\n  savedStatus: PropTypes.bool,\n}\n\nexport default connect(null, mapDispatchToProps)(Book)\n","export const setError = (error) => ({\n  type: \"SET_ERROR\",\n  error\n})\n\nexport const setLoading = (loading) => ({\n  type: \"SET_LOADING\",\n  loading\n})\n\nexport const setBookSearch = (books) => ({\n  type: \"BOOK_SEARCH\",\n  books\n})\n\nexport const setSaveBook = (book) => ({\n  type: \"BOOK_SAVE\",\n  book\n})\n\nexport const setRemoveBook = (bookID) => ({\n  type: \"BOOK_REMOVE\",\n  bookID\n})\n\nexport const updateBookDisplay = (bookID) => ({\n  type: \"BOOK_UPDATE\",\n  bookID\n})\n","import React, { Component } from 'react';\nimport Book from '../Book/Book';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nexport class BookDisplay extends Component {\n  render() {\n    const { searchedBooks } = this.props;\n    return (\n      <div className=\"BookDisplay\">\n        {\n          searchedBooks.map(singleBook => (\n            <Book key={singleBook.id}\n                  id={singleBook.id}\n                  title={singleBook.title}\n                  author={singleBook.author}\n                  image={singleBook.image}\n                  publisher={singleBook.publisher}\n                  savedStatus={singleBook.savedStatus}\n              />\n            )\n          )}\n      </div>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  searchedBooks: state.searchedBooks,\n})\n\nBookDisplay.propTypes = {\n  searchedBooks: PropTypes.array.isRequired,\n}\n\nexport default connect(mapStateToProps, null)(BookDisplay);\n","import React, { Component } from 'react';\nimport Book from '../Book/Book';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nexport class Modal extends Component {\n  render() {\n    const { savedBooks, hideModal } = this.props;\n    return (\n      <div className=\"Modal\">\n        <h2>Your Saved Books</h2>\n        <button className=\"hideModalBtn\" onClick={hideModal}>X</button>\n        <div className=\"BookDisplay\">\n          {\n            savedBooks.map(singleBook => (\n              <Book key={singleBook.id}\n                    id={singleBook.id}\n                    title={singleBook.title}\n                    author={singleBook.author}\n                    image={singleBook.image}\n                    publisher={singleBook.publisher}\n                    savedStatus={singleBook.savedStatus}\n                />\n              )\n            )}\n          </div>\n      </div>\n    )\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  savedBooks: state.savedBooks,\n})\n\nModal.propTypes = {\n  savedBooks: PropTypes.array,\n  hideModal: PropTypes.func,\n}\n\nexport default connect(mapStateToProps, null)(Modal);\n","import React from 'react';\nimport loadingImage from '../../logo.svg';\n\nexport const Loading = () => {\n  return (\n    <div className=\"Loading\">\n      <img src={loadingImage} className=\"Loading-logo\" alt=\"loading\" />\n    </div>\n  )\n}\n","import React from 'react';\n\nconst Error = () => {\n  return (\n    <div><h1>Error</h1></div>\n  )\n}\n\nexport default Error;\n","\nexport const cleanBooks = (books, savedBooks) => {\n  let filteredBooks = books.map(book => {\n    return {\n      id: book.id,\n      title: book.volumeInfo.title,\n      author: book.volumeInfo.authors ? book.volumeInfo.authors[0] : null,\n      image: book.volumeInfo.imageLinks.thumbnail,\n      publisher: book.volumeInfo.publisher ? book.volumeInfo.publisher : null,\n      savedStatus: handleBookReload(book.id, savedBooks)\n    }\n  })\n  return filteredBooks;\n}\n\nexport const handleBookReload = (bookResultID, savedBooks) => {\n  let bookSavedOnReload = savedBooks.find(book => {\n    return book.id === bookResultID\n  })\n\n  if(bookSavedOnReload) return true\n  return false\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nimport { Search } from '../Search/Search';\nimport BookDisplay from '../BookDisplay/BookDisplay';\nimport Modal from '../Modal/Modal';\nimport { Loading } from '../../components/Loading/Loading';\nimport Error from '../../components/Error/Error';\nimport { cleanBooks } from '../../utility/cleanBooks'\n\nimport * as actions from '../../actions/index';\n\nexport class App extends Component {\n  constructor(props) {\n    super();\n    this.state = {\n      modal: false,\n    }\n  }\n\n  handleSearch = async (search) => {\n    const { setBookSearch, setLoading, savedBooks } = this.props;\n    const url = \"https://www.googleapis.com/books/v1/volumes\";\n    setLoading(true)\n    try {\n      const response = await fetch(`${url}?q=${search}`)\n      if(!response.ok) { throw new Error('Fetch Call Cannot Be Made')}\n      const data = await response.json()\n      let updatedBooks = cleanBooks(data.items, savedBooks)\n      await setBookSearch(updatedBooks)\n    } catch(error){\n      this.props.setError(error.message)\n    }\n    setLoading(false)\n  }\n\n  showModal = () => {\n    this.setState({\n      modal: true\n    })\n  }\n\n  hideModal = () => {\n    this.setState({\n      modal: false\n    })\n  }\n\n  render() {\n    const { loading, searchedBooks, savedBooks } = this.props;\n    const { modal } = this.state;\n    return (\n      <div className=\"App\">\n      { savedBooks.length > 0 &&\n        <button className=\"modal-button\" onClick={this.showModal}>\n          View Saved Books <i className=\"fas fa-eye\"></i>\n        </button>\n      }\n      <Search handleSearch={this.handleSearch} />\n      {\n        loading ?\n        <Loading /> :\n        <div className=\"BookResults\">\n          {\n            searchedBooks.length > 0 &&\n            <BookDisplay />\n          }\n        </div>\n      }\n      {\n        modal &&\n        <Modal hideModal={this.hideModal} />\n      }\n      </div>\n    );\n  }\n}\n\nexport const mapStateToProps = (state) => ({\n  error: state.error,\n  loading: state.loading,\n  searchedBooks: state.searchedBooks,\n  savedBooks: state.savedBooks,\n})\n\nexport const mapDispatchToProps = (dispatch) => ({\n  setError: (data) => dispatch(actions.setError(data)),\n  setLoading: (data) => dispatch(actions.setLoading(data)),\n  setBookSearch: (data) => dispatch(actions.setBookSearch(data)),\n})\n\nApp.propTypes = {\n  error: PropTypes.string,\n  loading: PropTypes.bool,\n  searchedBooks: PropTypes.array,\n  savedBooks: PropTypes.array,\n  setError: PropTypes.func,\n  setLoading: PropTypes.func,\n  setBookSearch: PropTypes.func,\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { rootReducer } from './reducers';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\n\nimport './index.scss';\nimport App from './containers/App/App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { BrowserRouter } from 'react-router-dom'\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__(),\n)\n\n\nconst router = (\n  <Provider store={store}>\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n  </Provider>\n)\n\nReactDOM.render(router, document.getElementById('root'));\nserviceWorker.unregister();\n"],"sourceRoot":""}